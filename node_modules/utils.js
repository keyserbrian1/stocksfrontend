var fs = require("fs");
var path = require("path");
module.exports = {
  serve_file: function(response, file, dir, type){
    if (type === undefined){
      var ext = file.split(".");
      ext = ext[ext.length-1];
      var types = require("./file_types.json"); // eslint-disable-line global-require
      type = types[ext];
    }
    var write;
    if (type){
      write = function(errors, contents){
        if (errors){
          console.log("Failure to read file "+file+": "+errors);
          response.writeHead(404); //file not found or unavailable
        } else {
          response.writeHead(200, {"Content-type": type});
          response.write(contents);
        }
        response.end();
      };
    } else {
      write = function(errors, contents){
        if (errors){
          console.log("Failure to read file "+file+": "+errors);
          response.writeHead(404);//file not found or unavailable
        } else {
          response.writeHead(200);
          response.write(contents);
        }
        response.end();
      };
    }
    var filepath =  path.join(__dirname, dir+file);
    console.log("serving from "+filepath);
    if (type && type.split("/")[0] === "text"){
      fs.readFile(filepath, "utf8", write);
    } else {
      fs.readFile(filepath, write);
    }
  },
  serve_static: function(response, file, type){
    this.serve_file(response, file, "../client/static/", type);
  },
  serve_partial: function(response, file){
    this.serve_file(response, file, "../client/partials/", "text/html");
  },
  serve_script: function(response, file){
    this.serve_file(response, file, "../bower_components/");//both JS and CSS use this function, so can't assume type.
  },
  install: function(app){
    app.get(/\/partials\/(.+)/, function(req, res){
      module.exports.serve_partial(res, req.params[0]);
    });
    app.get(/\/cdn\/(.+)/, function(req, res){
      module.exports.serve_script(res, req.params[0]);
    });
    app.get(/\/static\/(.+)/, function(req, res){
      module.exports.serve_static(res, req.params[0]);
    });
  }
};
